version: "3.5"

networks:
  db:
  default:

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    networks:
      - db
    # volumes:
    #   - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
    #   - /path/to/mariadb/data/on/host:/var/lib/mysql # I want to manage volumes manually.

  php:
    image: wodby/php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      # Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_XDEBUG_REMOTE_AUTOSTART: 1
      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
      # PHP_IDE_CONFIG: serverName=
      # PHP_XDEBUG_IDEKEY: ""
      # PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux
      PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS
      # PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows
    networks:
      - db
    volumes:
      # For macOS users (https://wodby.com/docs/stacks/php/local#docker-for-mac)
      - ./:/var/www/html:cached
      # - docker-sync:/var/www/html # Docker-sync
      # For XHProf and Xdebug profiler traces
      # - files:/mnt/files

  api:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_api"
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_VHOST_PRESET: php
      NGINX_SERVER_ROOT: /var/www/html/public
      # NGINX_SERVER_EXTRA_CONF_FILEPATH: /etc/nginx/extra.conf
    volumes:
      - ./docker-nginx.conf:/etc/nginx/extra.conf
      # Options for macOS users (https://wodby.com/docs/stacks/php/local#docker-for-mac)
      - ./:/var/www/html:cached
      # - docker-sync:/var/www/html # Docker-sync
    networks:
      - default
      - db
    ports:
      - "9002:80"
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_api.rule=Host(`${PROJECT_BASE_URL}`)"
      # Use line below when testing stack with Varnish.
      # - "traefik.http.routers.${PROJECT_NAME}_api.rule=Host(`api.${PROJECT_BASE_URL}`)"
      - "traefik.docker.network=hammer-datastore_default"

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  # varnish:
  #   image: wodby/varnish:$VARNISH_TAG
  #   container_name: "${PROJECT_NAME}_varnish"
  #   depends_on:
  #     - api
  #   environment:
  #     VARNISH_SECRET: secret
  #     VARNISH_BACKEND_HOST: api
  #     VARNISH_BACKEND_PORT: 80
  #     VARNISH_ALLOW_UNRESTRICTED_PURGE: 1
  #   networks:
  #     - default
  #   labels:
  #     - "traefik.http.services.${PROJECT_NAME}_varnish.loadbalancer.server.port=6081"
  #     - "traefik.http.routers.${PROJECT_NAME}_varnish.rule=Host(`${PROJECT_BASE_URL}`)"

  redis:
    container_name: "${PROJECT_NAME}_redis"
    image: wodby/redis:$REDIS_TAG
    networks:
      - db

#  pma:
#    image: phpmyadmin/phpmyadmin
#    container_name: "${PROJECT_NAME}_pma"
#    environment:
#      PMA_HOST: $DB_HOST
#      PMA_USER: $DB_USER
#      PMA_PASSWORD: $DB_PASSWORD
#      PHP_UPLOAD_MAX_FILESIZE: 1G
#      PHP_MAX_INPUT_VARS: 1G
#    labels:
#      - "traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)"

  elasticsearch:
    image: wodby/elasticsearch:$ELASTICSEARCH_TAG
    environment:
      ES_JAVA_OPTS: "-Xms500m -Xmx500m"
    ports:
      - "127.0.0.1:9201:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - default
      - db
    labels:
     - "traefik.http.services.${PROJECT_NAME}_elasticsearch.loadbalancer.server.port=9200"
     - "traefik.http.routers.${PROJECT_NAME}_elasticsearch.rule=Host(`elasticsearch.${PROJECT_BASE_URL}`)"

  kibana:
    image: wodby/kibana:$KIBANA_TAG
    depends_on:
      - elasticsearch
    labels:
      - "traefik.http.services.${PROJECT_NAME}_kibana.loadbalancer.server.port=5601"
      - "traefik.http.routers.${PROJECT_NAME}_kibana.rule=Host(`kibana.${PROJECT_BASE_URL}`)"

#  memcached:
#    container_name: "${PROJECT_NAME}_memcached"
#    image: wodby/memcached:$MEMCACHED_TAG

#  rsyslog:
#    container_name: "${PROJECT_NAME}_rsyslog"
#    image: wodby/rsyslog:$RSYSLOG_TAG

#  athenapdf:
#    image: arachnysdocker/athenapdf-service:$ATHENAPDF_TAG
#    container_name: "${PROJECT_NAME}_athenapdf"
#    environment:
#      WEAVER_AUTH_KEY: weaver-auth-key
#      WEAVER_ATHENA_CMD: "athenapdf -S"
#      WEAVER_MAX_WORKERS: 10
#      WEAVER_MAX_CONVERSION_QUEUE: 50
#      WEAVER_WORKER_TIMEOUT: 90
#      WEAVER_CONVERSION_FALLBACK: "false"

#  node:
#    image: wodby/node:$NODE_TAG
#    container_name: "${PROJECT_NAME}_node"
#    working_dir: /app
#    labels:
#      - "traefik.http.services.${PROJECT_NAME}_node.loadbalancer.server.port=3000"
#      - "traefik.http.routers.${PROJECT_NAME}_node.rule=Host(`node.${PROJECT_BASE_URL}`)"
#    expose:
#      - "3000"
#    volumes:
#      - ./path/to/your/single-page-app:/app
#    command: sh -c 'npm install && npm run start'

#  blackfire:
#    image: blackfire/blackfire
#    environment:
#      BLACKFIRE_SERVER_ID: XXXXX
#      BLACKFIRE_SERVER_TOKEN: YYYYY

#  webgrind:
#    image: wodby/webgrind:$WEBGRIND_TAG
#    environment:
#      WEBGRIND_PROFILER_DIR: /mnt/files/xdebug/profiler
#    labels:
#      - "traefik.http.routers.${PROJECT_NAME}_webgrind.rule=Host(`webgrind.${PROJECT_BASE_URL}`)"
#    volumes:
#      - files:/mnt/files

#  opensmtpd:
#    container_name: "${PROJECT_NAME}_opensmtpd"
#    image: wodby/opensmtpd:$OPENSMTPD_TAG

#  xhprof:
#    image: wodby/xhprof:$XHPROF_TAG
#    restart: always
#    volumes:
#      - files:/mnt/files
#    labels:
#      - "traefik.http.routers.${PROJECT_NAME}_xhprof.rule=Host(`xhprof.${PROJECT_BASE_URL}`)"

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
     - "traefik.http.routers.${PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker --log.level=debug
    ports:
      - '8001:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#volumes:
## Docker-sync for macOS users
#  docker-sync:
#    external: true
## For Xdebug profiler
#  files:
